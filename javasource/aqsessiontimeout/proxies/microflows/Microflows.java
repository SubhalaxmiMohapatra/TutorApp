// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package aqsessiontimeout.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the AqSessionTimeout module
	public static void aCT_CloseSessionTimeoutWarningPage(IContext context, aqsessiontimeout.proxies.SessionTimeoutCounter _sessionTimeoutCounter)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("SessionTimeoutCounter", _sessionTimeoutCounter == null ? null : _sessionTimeoutCounter.getMendixObject());
		Core.microflowCall("AqSessionTimeout.ACT_CloseSessionTimeoutWarningPage").withParams(params).execute(context);
	}
	public static void aCT_SessionTimeoutWarning(IContext context, system.proxies.User _user)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("User", _user == null ? null : _user.getMendixObject());
		Core.microflowCall("AqSessionTimeout.ACT_SessionTimeoutWarning").withParams(params).execute(context);
	}
	public static boolean aCT_SignoutUserAfterTimeout(IContext context, aqsessiontimeout.proxies.SessionTimeoutCounter _sessionTimeoutCounter)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("SessionTimeoutCounter", _sessionTimeoutCounter == null ? null : _sessionTimeoutCounter.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("AqSessionTimeout.ACT_SignoutUserAfterTimeout").withParams(params).execute(context);
	}
	public static system.proxies.User dSS_GetCurrentUser(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AqSessionTimeout.DSS_GetCurrentUser").withParams(params).execute(context);
		return result == null ? null : system.proxies.User.initialize(context, result);
	}
}