// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package aqsessiontimeout.proxies;

/**
 * This is a helper entity 
 */
public class SessionTimeoutCounter
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject sessionTimeoutCounterMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "AqSessionTimeout.SessionTimeoutCounter";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		LogOutAfterInSeconds("LogOutAfterInSeconds"),
		LogOutAfterInMinutes("LogOutAfterInMinutes"),
		SessionTerminated("SessionTerminated"),
		SessionTimeoutCounter_User("AqSessionTimeout.SessionTimeoutCounter_User");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public SessionTimeoutCounter(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "AqSessionTimeout.SessionTimeoutCounter"));
	}

	protected SessionTimeoutCounter(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject sessionTimeoutCounterMendixObject)
	{
		if (sessionTimeoutCounterMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("AqSessionTimeout.SessionTimeoutCounter", sessionTimeoutCounterMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a AqSessionTimeout.SessionTimeoutCounter");

		this.sessionTimeoutCounterMendixObject = sessionTimeoutCounterMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'SessionTimeoutCounter.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static aqsessiontimeout.proxies.SessionTimeoutCounter initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return aqsessiontimeout.proxies.SessionTimeoutCounter.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static aqsessiontimeout.proxies.SessionTimeoutCounter initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new aqsessiontimeout.proxies.SessionTimeoutCounter(context, mendixObject);
	}

	public static aqsessiontimeout.proxies.SessionTimeoutCounter load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return aqsessiontimeout.proxies.SessionTimeoutCounter.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of LogOutAfterInSeconds
	 */
	public final java.lang.Integer getLogOutAfterInSeconds()
	{
		return getLogOutAfterInSeconds(getContext());
	}

	/**
	 * @param context
	 * @return value of LogOutAfterInSeconds
	 */
	public final java.lang.Integer getLogOutAfterInSeconds(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.LogOutAfterInSeconds.toString());
	}

	/**
	 * Set value of LogOutAfterInSeconds
	 * @param logoutafterinseconds
	 */
	public final void setLogOutAfterInSeconds(java.lang.Integer logoutafterinseconds)
	{
		setLogOutAfterInSeconds(getContext(), logoutafterinseconds);
	}

	/**
	 * Set value of LogOutAfterInSeconds
	 * @param context
	 * @param logoutafterinseconds
	 */
	public final void setLogOutAfterInSeconds(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer logoutafterinseconds)
	{
		getMendixObject().setValue(context, MemberNames.LogOutAfterInSeconds.toString(), logoutafterinseconds);
	}

	/**
	 * @return value of LogOutAfterInMinutes
	 */
	public final java.lang.Integer getLogOutAfterInMinutes()
	{
		return getLogOutAfterInMinutes(getContext());
	}

	/**
	 * @param context
	 * @return value of LogOutAfterInMinutes
	 */
	public final java.lang.Integer getLogOutAfterInMinutes(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.LogOutAfterInMinutes.toString());
	}

	/**
	 * Set value of LogOutAfterInMinutes
	 * @param logoutafterinminutes
	 */
	public final void setLogOutAfterInMinutes(java.lang.Integer logoutafterinminutes)
	{
		setLogOutAfterInMinutes(getContext(), logoutafterinminutes);
	}

	/**
	 * Set value of LogOutAfterInMinutes
	 * @param context
	 * @param logoutafterinminutes
	 */
	public final void setLogOutAfterInMinutes(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer logoutafterinminutes)
	{
		getMendixObject().setValue(context, MemberNames.LogOutAfterInMinutes.toString(), logoutafterinminutes);
	}

	/**
	 * @return value of SessionTerminated
	 */
	public final java.lang.Boolean getSessionTerminated()
	{
		return getSessionTerminated(getContext());
	}

	/**
	 * @param context
	 * @return value of SessionTerminated
	 */
	public final java.lang.Boolean getSessionTerminated(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.SessionTerminated.toString());
	}

	/**
	 * Set value of SessionTerminated
	 * @param sessionterminated
	 */
	public final void setSessionTerminated(java.lang.Boolean sessionterminated)
	{
		setSessionTerminated(getContext(), sessionterminated);
	}

	/**
	 * Set value of SessionTerminated
	 * @param context
	 * @param sessionterminated
	 */
	public final void setSessionTerminated(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean sessionterminated)
	{
		getMendixObject().setValue(context, MemberNames.SessionTerminated.toString(), sessionterminated);
	}

	/**
	 * @return value of SessionTimeoutCounter_User
	 */
	public final system.proxies.User getSessionTimeoutCounter_User() throws com.mendix.core.CoreException
	{
		return getSessionTimeoutCounter_User(getContext());
	}

	/**
	 * @param context
	 * @return value of SessionTimeoutCounter_User
	 */
	public final system.proxies.User getSessionTimeoutCounter_User(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.User result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SessionTimeoutCounter_User.toString());
		if (identifier != null)
			result = system.proxies.User.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SessionTimeoutCounter_User
	 * @param sessiontimeoutcounter_user
	 */
	public final void setSessionTimeoutCounter_User(system.proxies.User sessiontimeoutcounter_user)
	{
		setSessionTimeoutCounter_User(getContext(), sessiontimeoutcounter_user);
	}

	/**
	 * Set value of SessionTimeoutCounter_User
	 * @param context
	 * @param sessiontimeoutcounter_user
	 */
	public final void setSessionTimeoutCounter_User(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.User sessiontimeoutcounter_user)
	{
		if (sessiontimeoutcounter_user == null)
			getMendixObject().setValue(context, MemberNames.SessionTimeoutCounter_User.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SessionTimeoutCounter_User.toString(), sessiontimeoutcounter_user.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return sessionTimeoutCounterMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final aqsessiontimeout.proxies.SessionTimeoutCounter that = (aqsessiontimeout.proxies.SessionTimeoutCounter) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "AqSessionTimeout.SessionTimeoutCounter";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
